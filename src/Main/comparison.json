{
  "stats": {
    "framerx": 17,
    "storybook": 12,
    "supernova": 14,
    "views": 25,
    "viewsnext": 34,
    "total": 37
  },
  "comparison": [
    {
      "feature": "On click interactions",
      "description": "Assign an interactive behaviour to the design components using properties panel",
      "framerx": true,
      "storybook": true,
      "supernova": true,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Sketch Import",
      "description": "Import Sketch files with layers in the artboard positioned \"absolute\". Each layer has defined the position related to the top left corner of the artboard (0,0) and requires a redefinition of the flexible rules every time change is made to the Sketch file",
      "framerx": true,
      "storybook": false,
      "supernova": true,
      "views": false,
      "viewsnext": false
    },
    {
      "feature": "Helps you develop components in isolation",
      "description": "Make and tweak each component's layout, style, and states on its own, without the need to navigate in the preview or local build",
      "framerx": true,
      "storybook": true,
      "supernova": true,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Animated screen transitions",
      "description": "Animate how one screen (or route) transitions to another one",
      "framerx": true,
      "supernova": true,
      "views": false,
      "viewsnext": true
    },
    {
      "feature": "Integrate any external componets",
      "description": "Use custom React components side by side the design components (custom components - downloaded from, i.e. NPM, or written by you in JavaScript; design components - created in the tool by designers, without code knowledge)",
      "framerx": true,
      "storybook": true,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Make components with adjustable custom props",
      "description": "Create design components with props exposed to the other components, business logic, or services",
      "framerx": true,
      "storybook": true,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Flexible/adaptive layout",
      "description": "Use a flexbox-like model to lay out elements that adapt to the size of the screen or window size. Flexible layouts are the opposite of absolute position layouts, where elements don't react to the screen size (position absolute elements remain in the same position regardless of the screen or browser's window size)",
      "framerx": true,
      "storybook": true,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Render custom React components in the artboard",
      "description": "View and compose using the external/ custom React components in the artboard, inside of the tool, without the need to run the preview",
      "framerx": true,
      "storybook": true,
      "supernova": false,
      "views": false,
      "viewsnext": true
    },
    {
      "feature": "Design system components preview",
      "description": "Access all components used in the project. Browse and preview each part of the project on its own",
      "framerx": true,
      "storybook": true,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Drag and drop in the artboard",
      "description": "Move layers/ elements of the design in the artboard using drag and drop functionality without writing code. Includes dragging between the containers",
      "framerx": true,
      "storybook": false,
      "supernova": true,
      "views": false,
      "viewsnext": true
    },
    {
      "feature": "Components store",
      "description": "Browse and import components made by others from a store-like curated group within the tool, and without writing code",
      "framerx": true,
      "storybook": false,
      "supernova": false,
      "views": false,
      "viewsnext": true
    },
    {
      "feature": "Layout composition",
      "description": "Create complex layouts using multiple elements",
      "framerx": true,
      "storybook": false,
      "supernova": true,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Automated constrains within containers",
      "description": "Use rules and auto-layouts to create smart/ flexible/ adaptive compositions",
      "framerx": true,
      "storybook": false,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Reusable components",
      "description": "Save to further reuse components in other parts of the design",
      "framerx": true,
      "storybook": false,
      "supernova": true,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Import SVGs",
      "description": "Import SVG files and use them in the layouts",
      "framerx": true,
      "storybook": false,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Mock click-through like flows",
      "description": "Link interactive components between each other to prototype user journeys. The output is only a fake mockup, and it's not usable in production. Production ready flows are covered in separate point",
      "framerx": true
    },
    {
      "feature": "Draw icons and vector shapes",
      "description": "Draw vector shapes using Bezier point paths and perform operations on paths",
      "framerx": true
    },
    {
      "feature": "Integrated with your application source code",
      "description": "The components built with the tool are part of the same code base used by the developers to build the app finally used by the users",
      "framerx": false,
      "storybook": true,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Ability to support other frameworks (VueJS, Angular 4)",
      "description": "Design components can be compiled to work with frameworks other than React",
      "framerx": false,
      "storybook": true,
      "supernova": false,
      "views": false,
      "viewsnext": true
    },
    {
      "feature": "No runtime dependency ",
      "description": "There is no additional process added to the runtime of the application. The compilation process happens in the development mode, and it is not a part of the production build",
      "framerx": false,
      "storybook": true,
      "supernova": true,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Data driven lists",
      "description": "Use data to display the list's content in a similar way the users would see them",
      "framerx": false,
      "storybook": true,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Open source core",
      "description": "Keep using the framework for free and regardless if you pay for the tool's licence. The tool is an addition to the open source framework to help speed up the design process",
      "framerx": false,
      "storybook": true,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Cross platform code (Web and Native)",
      "description": "Use the same design components to generate Web and Native components without additional refactoring",
      "framerx": false,
      "storybook": false,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "React Web project preview",
      "description": "Start the React Web project to preview how the production build looks like and behaves - See what the user sees in the browser",
      "framerx": false,
      "storybook": false,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Production ready animations ",
      "description": "Animate the properties of design components between their states, like buttons or navigation, and use them without additional development work in the final production build",
      "framerx": false,
      "storybook": false,
      "supernova": true,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Create and render component states",
      "description": "Create and design custom states of the design components, i.e. an item is purchased, so the background changed to green and \"Added to cart\" text appeared in the view",
      "framerx": false,
      "storybook": false,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Automated E2E helpers (end to end for React Web)",
      "description": "Automatically generate end to end test selectors to simplify and speed up the Quality Assurance work",
      "framerx": false,
      "storybook": false,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Create custom prop overrides with one click",
      "description": "Create links between properties of the base component and the component used in the layout. Custom props allow you to take full control over the way components look like at the point of use, and override the defaults saved in the design system",
      "framerx": false,
      "storybook": false,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Create production build",
      "description": "Create final build of your app for the users to access. Production build includes performance optimisations and code minification",
      "framerx": false,
      "storybook": false,
      "supernova": true,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Automated production ready code",
      "description": "Sync the development environment with the production without manual code export, copy and paste hand-off, or refactoring",
      "framerx": false,
      "supernova": true,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Extend any design component with custom logic",
      "description": "Control the look and add behaviour to design components using custom written JavaScript code",
      "framerx": false,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Edit design components in code editor",
      "description": "Open and edit files in the code editor of your choice - developers friendly feature",
      "framerx": false,
      "supernova": true,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Fully control the compiled output",
      "description": "Developers can change anything in the project structure and its dependencies without conflicts with the files provided by the tool",
      "framerx": false,
      "supernova": false,
      "views": true,
      "viewsnext": true
    },
    {
      "feature": "Design system style guide specifications",
      "description": "Compile and preview in one style guide document all styles, colours, font families, icons, etc.",
      "framerx": false,
      "storybook": false,
      "supernova": false,
      "views": false,
      "viewsnext": true
    },
    {
      "feature": "Version control",
      "description": "Control what's committed and pushed to the code repository of your project. Not to confuse with undo/redo feature",
      "framerx": false,
      "storybook": false,
      "supernova": false,
      "views": false,
      "viewsnext": true
    },
    {
      "feature": "React Native project preview ",
      "description": "Start the React Native project to preview how the production build looks like and behaves - See what the user sees on mobile devices",
      "framerx": false,
      "storybook": false,
      "supernova": true,
      "views": false,
      "viewsnext": true
    },
    {
      "feature": "Production ready flows",
      "description": "Connect states and routes of your layouts into a state-machine-like flow used in the production build to enable users to navigate the application",
      "framerx": false,
      "supernova": true,
      "views": false,
      "viewsnext": true
    }
  ]
}
